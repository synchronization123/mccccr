import requests
import pandas as pd
import datetime

# Jira API Configuration
JIRA_URL = "https://your-jira-instance.atlassian.net/rest/api/2/search"
JIRA_API_TOKEN = "jsjjd"  # Replace with actual token
HEADERS = {
    "Authorization": f"Bearer {JIRA_API_TOKEN}",
    "Content-Type": "application/json",
}

# Function to get date input from the user
def get_date_range():
    start_date = input("Enter start date (YYYY-MM-DD): ").strip()
    end_date = input("Enter end date (YYYY-MM-DD): ").strip()
    return start_date, end_date

# Function to query Jira API for a specific status change by user
def fetch_total_count(status_from, status_to, user, start_date, end_date):
    jql_query = f"""
        status changed FROM "{status_from}" TO "{status_to}" BY {user} DURING ("{start_date}", "{end_date} 23:59")
    """
    
    params = {"jql": jql_query, "maxResults": 0}  # Only fetch the total count
    
    response = requests.get(JIRA_URL, headers=HEADERS, params=params)
    
    if response.status_code == 200:
        return response.json().get("total", 0)
    else:
        print(f"Error fetching data for {user}: {response.status_code}, {response.text}")
        return 0

# Read users from users.xlsx
users_df = pd.read_excel("users.xlsx")  # Ensure the file exists
users = users_df["Username"].tolist()

# Get date range from user input
start_date, end_date = get_date_range()

# List to store results
data = []

# Check Jira status changes for each user
for user in users:
    fs_count = fetch_total_count("fs-security review pending", "done", user, start_date, end_date)
    ds_count = fetch_total_count("ds-security review pending", "reopened", user, start_date, end_date)
    
    data.append([user, fs_count, ds_count])

# Convert data to DataFrame
df = pd.DataFrame(data, columns=["User", "FS Accepted", "DS Accepted"])

# Add total row at the bottom
total_fs = df["FS Accepted"].sum()
total_ds = df["DS Accepted"].sum()
df.loc["Total"] = ["TOTAL", total_fs, total_ds]

# Generate the filename with the current date
current_date = datetime.datetime.now().strftime("%Y-%m-%d")
filename = f"{current_date}-FS,DS,RFS-Report.xlsx"

# Write results to Excel
df.to_excel(filename, index=False)

print(f"Report generated: {filename}")