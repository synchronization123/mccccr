<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>View Patch</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f4f4f4;
            margin: 0;
            padding: 20px;
        }

        h1 {
            text-align: center;
            color: #333;
        }

        .container {
            margin-top: 20px;
            background-color: white;
            padding: 15px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            border-radius: 8px;
        }

        table {
            width: 100%;
            border-collapse: collapse;
        }

        th, td {
            padding: 12px;
            text-align: left;
            border-bottom: 1px solid #ddd;
            word-wrap: break-word;
        }

        th {
            background-color: #4CAF50;
            color: white;
        }

        tr:hover {
            background-color: #f1f1f1;
        }

        .buttons {
            display: flex;
            justify-content: space-around;
        }

        .btn {
            padding: 6px 12px;
            color: white;
            background-color: #4CAF50;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }

        .btn-danger {
            background-color: #f44336;
        }

        .btn-refresh {
            margin-bottom: 20px;
            display: block;
            width: 100%;
            padding: 10px;
            text-align: center;
            background-color: #008CBA;
            color: white;
            border: none;
            border-radius: 5px;
        }

        .btn-refresh:hover {
            background-color: #006f8f;
        }
    </style>
</head>
<body>
    <h1>View Patch Data</h1>

    <div class="container">
        <button class="btn-refresh" onclick="fetchData()">Refresh Table</button>
        
        <table id="patchTable">
            <thead>
                <tr>
                    <th>Jira ID</th>
                    <th>Issue Type</th>
                    <th>Added On</th>
                    <th>Comments</th>
                    <th>Assigned To</th>
                    <th>Status</th>
                    <th>Assigned On</th>
                    <th>Version</th>
                    <th>Reviewed On</th>
                    <th>Tags</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                <!-- Data will be populated here dynamically -->
            </tbody>
        </table>
    </div>

    <script>
        const apiUrl = 'https://dojo.crm.com/api/v2/engagements';
        const defaultTags = ['#crm'];
        const defaultProduct = 33;

        // Use async function to fetch data from the API
        async function fetchData() {
            try {
                const response = await fetch(apiUrl, {
                    method: 'GET',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                });

                // Check if the response is OK
                if (!response.ok) {
                    throw new Error(`HTTP error! Status: ${response.status}`);
                }

                const data = await response.json();
                const tableBody = document.getElementById('patchTable').getElementsByTagName('tbody')[0];
                tableBody.innerHTML = ''; // Clear the table

                // Loop through data and populate the table
                data.forEach(item => {
                    const row = tableBody.insertRow();

                    const jiraId = item.name;
                    const issueType = item.reason;
                    const addedOn = item.created.split('T')[0]; // Date only (YYYY-MM-DD)
                    const comments = item.description || '';
                    const assignedTo = item.lead;
                    const status = item.status;
                    const assignedOn = item.target_start.split('T')[0];
                    const version = item.version;
                    const reviewedOn = status === 'Completed' ? new Date().toISOString().split('T')[0] : '';
                    const tags = item.tags.length ? item.tags.join(', ') : defaultTags.join(', ');

                    const cells = [
                        jiraId,
                        issueType,
                        addedOn,
                        comments,
                        assignedTo,
                        status,
                        assignedOn,
                        version,
                        reviewedOn,
                        tags
                    ];

                    cells.forEach(cellData => {
                        const cell = row.insertCell();
                        cell.textContent = cellData;
                    });

                    // Actions Column (Edit, Close)
                    const actionsCell = row.insertCell();
                    actionsCell.innerHTML = `
                        <button class="btn" onclick="window.open('https://dojo.crm.com/engagement/${item.id}/edit', '_blank')">Edit</button>
                        <button class="btn btn-danger" onclick="window.open('https://dojo.crm.com/engagement/${item.id}/close', '_blank')">Close</button>
                    `;
                });
            } catch (error) {
                console.error('Error fetching data: ', error);
                alert('Error fetching data. Please check the API or network connection.');
            }
        }

        window.onload = fetchData;
    </script>
</body>
</html>